@model IEnumerable<PSIMS.Models.QuotationModel.Quotation>
@using Microsoft.AspNet.Identity
@using IdentitySample.Models

@{
    ViewBag.Title = "Quotation History";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ApplicationDbContext db = new ApplicationDbContext();
}

<div class="box box-primary box-body">
    <table class="table table-striped table-responsive" id="dtaTable">
        <thead>
            <tr class="dataTableHead">
                <th>
                    ID
                </th>
                <th>
                    Quote Order No
                </th>
                <th>
                    Cust.Name
                </th>

                <th>
                    Your Ref
                </th>
                <th>
                    Amount
                </th>
                <th>
                    Discount
                </th>
                <th>
                    VAt
                </th>
                <th>
                    Grand Total
                </th>
                <th>
                    Category
                </th>
                <th>
                    Created By
                </th>
                <th>
                    Created On
                </th>
                <th>
                    Status
                </th>

                <th>Action</th>
            </tr>
        </thead>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.QuotationCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Customer.CustomerName)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.YourRef).ToString().ToUpper()
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Amount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Discount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Vat)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GrandTotal)
            </td>
            <td>

                @{
                    if (item.QuotationCategoryID == 1)
                    {
                        <a href="#" style="padding: 3px 10px 3px 10px; background-color:goldenrod " class="badge" readonly>Analizer</a>
                    }
                    else
                    {
                        <a href="#" style="padding: 3px 10px 3px 10px; background-color:cornflowerblue" class="badge" readonly>Re-Agent</a>
                        }
                }
            </td>
            <td>

                @{var fullname = db.Users.Where(u => u.Id == item.UserID).First().UserName ?? "n/a";}
                @fullname
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedOn)
            </td>
            <td>
                @{ if (item.bActive ==true)
                    {
                        <a href="#" style="padding: 3px 10px 3px 10px; background-color:green " class="badge" readonly>Active</a>
                    }
                    else
                    {
                        <a href="#" style="padding: 3px 10px 3px 10px; background-color:red " class="badge" readonly>Cancel</a>
                    }
                }

            </td>
            <td>

                <div class="dropdown">
                    <button style="background-color:#e74c3c; color:white; padding:2px 5px" class="btn btn-default btn-sm dropdown-toggle" type="button" id="dropdownMenu2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                        Actions
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenu2">
                        <li>@Html.ActionLink("Details", "Details", new { id = item.ID })</li>
                        <li>@Html.ActionLink("Header Edit", "HeaderEdit", new { id = item.ID })</li>
                        <li>@Html.ActionLink("Delete", "Delete", new { id = item.ID })</li>


                        @{
                            if (item.bActive == true)
                            {
                                if (item.QuotationCategoryID == 1)
                                {
                                    <li><a href="~/QuotationEntry/quotationForm_Analizer/@item.ID">Quotation</a></li>
                                }
                                else
                                {
                                    <li><a href="~/QuotationEntry/quotationForm_ReAgent/@item.ID">Quotation</a></li>
                                }
                            }
                            else
                            {

                            }



                        }


                        <!-- Button trigger modal -->

                    </ul>
                </div>

            </td>
        </tr>
        }

    </table>
</div>
<script>

    //$(document).ready(function () {
    //    $('#dtaTable').DataTable({
    //        "order": [[1, "desc"]],
    //        // "pageLength": 50,    //shows default page length to be 50
    //        // "lengthMenu": [[10, 25, 50,100, -1], [10, 25, 50,100, "All"]]
    //        "lengthMenu": [[5, 10, 25, 50, 100, -1], [5, 10, 25, 50, 100, "All"]]
    //    });
    //});
    $(document).ready(function () {
        $('#dtaTable').DataTable({
            "paging": true,
            "order": [[0, 'desc']],
            "info": true,
            "iDisplayLength": 10,
            "aLengthMenu": [[5, 10, 25, 50, 100, 500, 1000, -1], [5, 10, 25, 50, 100, 500, 1000, "All"]],
        });
    });
    $('#myModal').on('shown.bs.modal', function () {
        $('#myInput').focus()
    })

 </script>