@model PSIMS.Models.SalesModel.Customer

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Scripts/AdminLTE/plugins/iCheck/flat/red.css" rel="stylesheet" />
<link href="~/Scripts/AdminLTE/plugins/iCheck/line/red.css" rel="stylesheet" />
<link href="~/Scripts/AdminLTE/plugins/iCheck/square/red.css" rel="stylesheet" />


<div class="box box-body box-primary">
    @using (Html.BeginForm(null, null, FormMethod.Post, new { @enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-md-12">
                <h4>Customer</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="col-md-6">
                    <div class="form-group">
                        Customer Name
                        @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control", @Style = " text-transform: uppercase" } })
                        @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                        <p style="color:red">@ViewBag.DuplicateError</p>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        Company Name
                        @Html.EditorFor(model => model.Companyname, new { htmlAttributes = new { @class = "form-control", @Style = " text-transform: uppercase" } })
                        @Html.ValidationMessageFor(model => model.Companyname, "", new { @class = "text-danger" })
                        <p style="color:red">@ViewBag.DuplicateError</p>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        VAT No
                        @Html.EditorFor(model => model.Registation_No, new { htmlAttributes = new { @class = "form-control", @Style = "text-transform: uppercase" } })
                        @Html.ValidationMessageFor(model => model.Companyname, "", new { @class = "text-danger" })
                        <p style="color:red">@ViewBag.DuplicateError</p>

                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        Email Address
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Companyname, "", new { @class = "text-danger" })
                        <p style="color:red">@ViewBag.DuplicateError</p>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        Telephone No
                        @Html.EditorFor(model => model.TelPhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TelPhoneNo, "", new { @class = "text-danger" })
                        <p style="color:red">@ViewBag.DuplicateError</p>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        Mobile No
                        @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        Fax No
                        @Html.EditorFor(model => model.FaxNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FaxNo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        Address
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        Address Line (Optional)
                        @Html.EditorFor(model => model.Address_line2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address_line2, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        City
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        State/Distric/province
                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-6">
                    Status
                    @Html.EnumDropDownListFor(model => model.Status, "-- Select Status --", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    Latitude
                    @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })

                </div>
                <div class="form-group col-md-6">
                    Longitude
                    @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })

                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        Image
                        @Html.TextBoxFor(model => model.File, new { @type = "file" })
                    </div>
                </div>
                <div class="col-md-6">

                    Is Name Display
                    <div class="form-group">
                        <div class="checkbox">
                            <label> @Html.RadioButtonFor(model => model.CustNameIsActive, "true", new { @class = "icheck2" }) Show </label>
                            <label> @Html.RadioButtonFor(model => model.CustNameIsActive, "false", new { @class = "icheck2" }) Hide </label>
                            @Html.ValidationMessageFor(model => model.CustNameIsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-primary btn-flat" />
                        </div>
                    </div>
                </div>
            </div>
        </div>


    }

    <div>
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary btn bg-olive btn-flat" })
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/AdminLTE/plugins/iCheck/icheck.min.js" type="text/javascript"></script>
<script>
    $(document).ready(function () {

        $('.datepicker').datepicker({
            format: 'yyyy-mm-dd'
        });

        $('.icheck2').iCheck({
            checkboxClass: 'icheckbox_square',
            radioClass: 'iradio_square-red',
            increaseArea: '20%' // optional
        });

    });

</script>