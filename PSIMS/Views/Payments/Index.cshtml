@model IEnumerable<PSIMS.Models.Finance.Payment>
@using Microsoft.AspNet.Identity
@using IdentitySample.Models

@{
    ViewBag.Title = "List of Payments";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ApplicationDbContext db = new ApplicationDbContext();
}


<div class="box box-body box-primary">

    <p>
        @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary btn bg-olive btn-flat" })
    </p>
    <table class="table table-striped table-responsive" id="dtaTable">
        <thead>
            <tr class="dataTableHead">
                <th>
                    Receipt No
                </th>
                <th>
                    Invoice No
                </th>
                <th>
                    Rec.Payment Date
                </th>
                <th>
                    Inv.Grand Amount
                </th>
                <th>
                    Paid Amount
                </th>

                <th>
                    Balance
                </th>
                <th>
                    Pay Mode
                </th>
                <th>
                    ChequeNo
                </th>
                <th>
                    ChequeDate
                </th>
                <th>
                    Bank
                </th>
                <th>
                    Status
                </th>
                <th>Action</th>
            </tr>
        </thead>
        @foreach (var item in Model)
        {
            
            
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SalesID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PaymentDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GrandTotal)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PaidAmount)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Balance)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PayMode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ChequeNo)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.ChequeDate)
                </td>
                <td>
                    @{var bankdetails = item.BankID == null ?"" :item.Bank.BankCode +"-"+ item.Bank.BankName;}
                    @bankdetails

                </td>
                <td class="txtCheckBox">
                    @{
            if (item.Status == true)
            {
                <a href="#" style="padding: 3px 10px 3px 10px; background-color:green " class="badge" readonly>Active</a>

            }
            else
            {

                <a href="#" style="padding: 3px 10px 3px 10px; background-color:red " class="badge" readonly>Cancel</a>
            }
}
                </td>
                <td>

                    <div class="dropdown">
                        <button style="background-color:#e74c3c; color:white; padding:2px 5px" class="btn btn-default btn-sm dropdown-toggle" type="button" id="dropdownMenu2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                            Actions
                            <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenu2">
                            @*<li>@Html.ActionLink("Edit", "Edit", new { id = item.ID })</li>*@
                            <li>@Html.ActionLink("View", "Details", new { id = item.ID })</li>
                            <li><a href="~/Payments/SalesReceipt/@item.ID">Receipt</a></li>
                        </ul>
                    </div>

                </td>
            </tr>
        }

    </table>
</div>

    <script>
        $(document).ready(function () {
            $('#dtaTable').DataTable({
                "order": [[1, "desc"]],
                // "pageLength": 50,    //shows default page length to be 50
                // "lengthMenu": [[10, 25, 50,100, -1], [10, 25, 50,100, "All"]]
                "lengthMenu": [[5, 10, 25, 50, 100, -1], [5, 10, 25, 50, 100, "All"]]
            });
        });


    </script>
